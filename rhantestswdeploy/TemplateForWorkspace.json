{
	"$schema": "http://schema.management.azure.com/schemas/2015-01-01/deploymentTemplate.json#",
	"contentVersion": "1.0.0.0",
	"parameters": {
		"workspaceName": {
			"type": "string",
			"metadata": "ワークスペース名",
			"defaultValue": "rhantestswdeploy"
		},
		"rhantestswdeploy-WorkspaceDefaultSqlServer_connectionString": {
			"type": "secureString",
			"metadata": "'rhantestswdeploy-WorkspaceDefaultSqlServer' の 'connectionString' のセキュリティで保護された文字列"
		},
		"AzureKeyVault1_properties_typeProperties_baseUrl": {
			"type": "string",
			"defaultValue": "https://rhanKeyVault01.vault.azure.net/"
		},
		"rhantestswdeploy-WorkspaceDefaultStorage_properties_typeProperties_url": {
			"type": "string",
			"defaultValue": "https://dlsg4synapseworkspace.dfs.core.windows.net"
		}
	},
	"variables": {
		"workspaceId": "[concat('Microsoft.Synapse/workspaces/', parameters('workspaceName'))]"
	},
	"resources": [
		{
			"name": "[concat(parameters('workspaceName'), '/Pipeline 1')]",
			"type": "Microsoft.Synapse/workspaces/pipelines",
			"apiVersion": "2019-06-01-preview",
			"properties": {
				"activities": [
					{
						"name": "Web1",
						"type": "WebActivity",
						"dependsOn": [],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"url": "http://www.google.com",
							"connectVia": {
								"referenceName": "AutoResolveIntegrationRuntime",
								"type": "IntegrationRuntimeReference"
							},
							"method": "GET",
							"headers": {}
						}
					}
				],
				"annotations": []
			},
			"dependsOn": [
				"[concat(variables('workspaceId'), '/integrationRuntimes/AutoResolveIntegrationRuntime')]"
			]
		},
		{
			"name": "[concat(parameters('workspaceName'), '/AzureKeyVault1')]",
			"type": "Microsoft.Synapse/workspaces/linkedServices",
			"apiVersion": "2019-06-01-preview",
			"properties": {
				"annotations": [],
				"type": "AzureKeyVault",
				"typeProperties": {
					"baseUrl": "[parameters('AzureKeyVault1_properties_typeProperties_baseUrl')]"
				}
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('workspaceName'), '/rhantestswdeploy-WorkspaceDefaultSqlServer')]",
			"type": "Microsoft.Synapse/workspaces/linkedServices",
			"apiVersion": "2019-06-01-preview",
			"properties": {
				"parameters": {
					"DBName": {
						"type": "String"
					}
				},
				"annotations": [],
				"type": "AzureSqlDW",
				"typeProperties": {
					"connectionString": "[parameters('rhantestswdeploy-WorkspaceDefaultSqlServer_connectionString')]"
				},
				"connectVia": {
					"referenceName": "AutoResolveIntegrationRuntime",
					"type": "IntegrationRuntimeReference"
				}
			},
			"dependsOn": [
				"[concat(variables('workspaceId'), '/integrationRuntimes/AutoResolveIntegrationRuntime')]"
			]
		},
		{
			"name": "[concat(parameters('workspaceName'), '/rhantestswdeploy-WorkspaceDefaultStorage')]",
			"type": "Microsoft.Synapse/workspaces/linkedServices",
			"apiVersion": "2019-06-01-preview",
			"properties": {
				"annotations": [],
				"type": "AzureBlobFS",
				"typeProperties": {
					"url": "[parameters('rhantestswdeploy-WorkspaceDefaultStorage_properties_typeProperties_url')]"
				},
				"connectVia": {
					"referenceName": "AutoResolveIntegrationRuntime",
					"type": "IntegrationRuntimeReference"
				}
			},
			"dependsOn": [
				"[concat(variables('workspaceId'), '/integrationRuntimes/AutoResolveIntegrationRuntime')]"
			]
		},
		{
			"name": "[concat(parameters('workspaceName'), '/AutoResolveIntegrationRuntime')]",
			"type": "Microsoft.Synapse/workspaces/integrationRuntimes",
			"apiVersion": "2019-06-01-preview",
			"properties": {
				"type": "Managed",
				"typeProperties": {
					"computeProperties": {
						"location": "AutoResolve",
						"dataFlowProperties": {
							"computeType": "General",
							"coreCount": 8,
							"timeToLive": 0
						}
					}
				}
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('workspaceName'), '/Credential1')]",
			"type": "Microsoft.Synapse/workspaces/credentials",
			"apiVersion": "2019-06-01-preview",
			"properties": {
				"type": "ServicePrincipal",
				"typeProperties": {
					"tenant": "72f988bf-86f1-41af-91ab-2d7cd011db47",
					"servicePrincipalId": "asdfasdf",
					"servicePrincipalKey": {
						"type": "AzureKeyVaultSecret",
						"store": {
							"referenceName": "AzureKeyVault1",
							"type": "LinkedServiceReference"
						},
						"secretName": "asdf"
					}
				}
			},
			"dependsOn": [
				"[concat(variables('workspaceId'), '/linkedServices/AzureKeyVault1')]"
			]
		},
		{
			"name": "[concat(parameters('workspaceName'), '/WorkspaceSystemIdentity')]",
			"type": "Microsoft.Synapse/workspaces/credentials",
			"apiVersion": "2019-06-01-preview",
			"properties": {
				"type": "ManagedIdentity",
				"typeProperties": {}
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('workspaceName'), '/SQL script 2')]",
			"type": "Microsoft.Synapse/workspaces/sqlscripts",
			"apiVersion": "2019-06-01-preview",
			"properties": {
				"content": {
					"query": "--Drop master key\n\n--> Optional - a MASTER KEY is not required if a DATABASE SCOPED CREDENTIAL is not required because the blob is configured for public (anonymous) access!\nCREATE MASTER KEY ENCRYPTION BY PASSWORD = 'M$tr!2345678';\nGO\n--> Optional - a DATABASE SCOPED CREDENTIAL is not required because the blob is configured for public (anonymous) access!\nCREATE DATABASE SCOPED CREDENTIAL MyAzureBlobStorageCredential\n WITH IDENTITY = 'SHARED ACCESS SIGNATURE',\n SECRET = 'sp=r&st=2021-06-03T11:12:23Z&se=2021-06-03T19:12:23Z&spr=https&sv=2020-02-10&sr=c&sig=4etAlkH2RurRiNkl8sEKhEDWdkTTA66Iy6kU7qR35bM%3D';\n\n -- NOTE: Make sure that you don't have a leading ? in SAS token, and\n -- that you have at least read permission on the object that should be loaded srt=o&sp=r, and\n -- that expiration period is valid (all dates are in UTC time)\n\nCREATE EXTERNAL DATA SOURCE MyAzureBlobStorage\nWITH ( \n          LOCATION = 'https://rhantestsa01.blob.core.windows.net/test2106020060000726'\n          , CREDENTIAL= MyAzureBlobStorageCredential --> CREDENTIAL is not required if a blob is configured for public (anonymous) access!\n          --, TYPE = BLOB_STORAGE\n);\n\n/*\nCreate view\n*/\ncreate view SiginInCheck_View_May2021 as\nALTER VIEW [dbo].[SiginInCheck_View_May2021] as \nSELECT\nKKNO\n, KKNAME\nfrom openrowset(\n        bulk 'https://rhantestsa01.blob.core.windows.net/test2106020060000726/LargeKKBaseInfo.csv',\n        format = 'csv',\n        fieldterminator =',',\n        FIRSTROW = 2\n    ) with (\n        [KKNO] int,\n        [KKNAME] varchar(32)) as rows\n;\n\nselect count(*) from SiginInCheck_View_May2021;\n",
					"metadata": {
						"language": "sql"
					},
					"currentConnection": {
						"poolName": "Built-in",
						"databaseName": "test111"
					},
					"resultLimit": -1
				},
				"type": "SqlQuery"
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('workspaceName'), '/Test2106160060002152')]",
			"type": "Microsoft.Synapse/workspaces/sqlscripts",
			"apiVersion": "2019-06-01-preview",
			"properties": {
				"content": {
					"query": "--Drop master key\n\n--> Optional - a MASTER KEY is not required if a DATABASE SCOPED CREDENTIAL is not required because the blob is configured for public (anonymous) access!\nCREATE MASTER KEY ENCRYPTION BY PASSWORD = 'M$tr!2345678';\nGO\n--> Optional - a DATABASE SCOPED CREDENTIAL is not required because the blob is configured for public (anonymous) access!\nCREATE DATABASE SCOPED CREDENTIAL cre2106160060002152\n WITH IDENTITY = 'SHARED ACCESS SIGNATURE',\n SECRET = 'sp=r&st=2021-06-03T11:12:23Z&se=2021-06-03T19:12:23Z&spr=https&sv=2020-02-10&sr=c&sig=4etAlkH2RurRiNkl8sEKhEDWdkTTA66Iy6kU7qR35bM%3D';\n\n -- NOTE: Make sure that you don't have a leading ? in SAS token, and\n -- that you have at least read permission on the object that should be loaded srt=o&sp=r, and\n -- that expiration period is valid (all dates are in UTC time)\n\nCREATE EXTERNAL DATA SOURCE ds2106160060002152\nWITH ( \n          LOCATION = 'https://rhantestsa01.blob.core.windows.net/test2106160060002152'\n          --, CREDENTIAL= cre2106160060002152 --> CREDENTIAL is not required if a blob is configured for public (anonymous) access!\n          --, TYPE = BLOB_STORAGE\n);\n\n--\n-- Create External file format.\ndrop external file format csvfile;\nCREATE EXTERNAL FILE FORMAT csvfile  \nWITH (  \n    FORMAT_TYPE = DELIMITEDTEXT,  \n    FORMAT_OPTIONS (  \n        FIELD_TERMINATOR = ',' )--,  \n    --DATA_COMPRESSION = 'org.apache.hadoop.io.compress.GzipCodec'\n);  \n\n-------------------------------------------------------\n-- External table\ndrop external table tbl_test2106160060002152;\ncreate external table tbl_test2106160060002152 \n(\n[Col1] nvarchar(36), \n[Col2] nvarchar(36), \n[Col3] nvarchar(36), \n[Col4] nvarchar(36), \n[Col5] nvarchar(36), \n[Col6] nvarchar(36), \n[Col7] nvarchar(36), \n[Col8] nvarchar(36), \n[Col9] nvarchar(36), \n[Col10] nvarchar(36), \n[Col11] nvarchar(36), \n[Col12] nvarchar(36), \n[Col13] nvarchar(36), \n[Col14] nvarchar(36), \n[Col15] nvarchar(36), \n[Col16] nvarchar(36), \n[Col17] nvarchar(36), \n[Col18] nvarchar(36), \n[Col19] nvarchar(36), \n[Col20] nvarchar(36), \n[Col21] nvarchar(36), \n[Col22] nvarchar(36), \n[Col23] nvarchar(36), \n[Col24] nvarchar(36), \n[Col25] nvarchar(36), \n[Col26] nvarchar(36), \n[Col27] nvarchar(36), \n[Col28] nvarchar(36), \n[Col29] nvarchar(36), \n[Col30] nvarchar(36), \n[Col31] nvarchar(36), \n[Col32] nvarchar(36), \n[Col33] nvarchar(36), \n[Col34] nvarchar(36), \n[Col35] nvarchar(36), \n[Col36] nvarchar(36), \n[Col37] nvarchar(36), \n[Col38] nvarchar(36), \n[Col39] nvarchar(36), \n[Col40] nvarchar(36), \n[Col41] nvarchar(36), \n[Col42] nvarchar(36), \n[Col43] nvarchar(36), \n[Col44] nvarchar(36), \n[Col45] nvarchar(36), \n[Col46] nvarchar(36)\n) with (\n    location = '提供情報②_事象再現用ファイル.csv',\n    data_source = ds2106160060002152,\n    file_format = csvfile\n);\n\nselect * from tbl_test2106160060002152;\n\n/*\nCreate View\n*/\n--create view SiginInCheck_View_May2021 as\n--ALTER VIEW [dbo].[SiginInCheck_View_May2021] as \n--Create \nALTER view test2106160060002152 as\nSELECT\nCol1 ,\nCol2 ,\nCol3 ,\nCol4 ,\nCol5 ,\nCol6 ,\nCol7 ,\nCol8 ,\nCol9 ,\nCol10,\nCol11,\nCol12,\nCol13,\nCol14,\nCol15,\nCol16,\nCol17,\nCol18,\nCol19,\nCol20,\nCol21,\nCol22,\nCol23,\nCol24,\nCol25,\nCol26,\nCol27,\nCol28,\nCol29,\nCol30,\nCol31,\nCol32,\nCol33,\nCol34,\nCol35,\nCol36,\nCol37,\nCol38,\nCol39,\nCol40,\nCol41,\nCol42,\nCol43,\nCol44,\nCol45,\nCol46\nfrom openrowset(\n        bulk 'https://rhantestsa01.blob.core.windows.net/test2106160060002152/提供情報②_事象再現用ファイル.csv',\n        format = 'csv',\n        fieldterminator =',',\n        FIRSTROW = 1\n    ) with (\n [Col1] nvarchar(36), \n[Col2] nvarchar(36), \n[Col3] nvarchar(36), \n[Col4] nvarchar(36), \n[Col5] nvarchar(36), \n[Col6] nvarchar(36), \n[Col7] nvarchar(36), \n[Col8] nvarchar(36), \n[Col9] nvarchar(36), \n[Col10] nvarchar(36), \n[Col11] nvarchar(36), \n[Col12] nvarchar(36), \n[Col13] nvarchar(36), \n[Col14] nvarchar(36), \n[Col15] nvarchar(36), \n[Col16] nvarchar(36), \n[Col17] nvarchar(36), \n[Col18] nvarchar(36), \n[Col19] nvarchar(36), \n[Col20] nvarchar(36), \n[Col21] nvarchar(36), \n[Col22] nvarchar(36), \n[Col23] nvarchar(36), \n[Col24] nvarchar(36), \n[Col25] nvarchar(36), \n[Col26] nvarchar(36), \n[Col27] nvarchar(36), \n[Col28] nvarchar(36), \n[Col29] nvarchar(36), \n[Col30] nvarchar(36), \n[Col31] nvarchar(36), \n[Col32] nvarchar(36), \n[Col33] nvarchar(36), \n[Col34] nvarchar(36), \n[Col35] nvarchar(36), \n[Col36] nvarchar(36), \n[Col37] nvarchar(36), \n[Col38] nvarchar(36), \n[Col39] nvarchar(36), \n[Col40] nvarchar(36), \n[Col41] nvarchar(36), \n[Col42] nvarchar(36), \n[Col43] nvarchar(36), \n[Col44] nvarchar(36), \n[Col45] nvarchar(36), \n[Col46] nvarchar(36)\n) as rows\n;\n\nselect * from test2106160060002152;\n\n\n-------------------------------------------------------\n-- External table troubleshooting\ndrop external table tbl_test2106160060002152_1;\ncreate external table tbl_test2106160060002152_1 \n(\n[Col1] nvarchar(36), \n[Col2] nvarchar(36), \n[Col3] nvarchar(36), \n[Col4] nvarchar(36), \n[Col5] nvarchar(36), \n[Col6] nvarchar(36), \n[Col7] nvarchar(36), \n[Col8] nvarchar(36), \n[Col9] nvarchar(36), \n[Col10] nvarchar(36), \n[Col11] nvarchar(36), \n[Col12] nvarchar(36), \n[Col13] nvarchar(36), \n[Col14] nvarchar(36), \n[Col15] nvarchar(36), \n[Col16] nvarchar(36), \n[Col17] nvarchar(36), \n[Col18] nvarchar(36), \n[Col19] nvarchar(36), \n[Col20] nvarchar(36), \n[Col21] nvarchar(36), \n[Col22] nvarchar(36), \n[Col23] nvarchar(36), \n[Col24] nvarchar(36), \n[Col25] nvarchar(36), \n[Col26] nvarchar(36), \n[Col27] nvarchar(36), \n[Col28] nvarchar(36), \n[Col29] nvarchar(36), \n[Col30] nvarchar(36), \n[Col31] nvarchar(36), \n[Col32] nvarchar(36), \n[Col33] nvarchar(36), \n[Col34] nvarchar(36), \n[Col35] nvarchar(36), \n[Col36] nvarchar(36), \n[Col37] nvarchar(36), \n[Col38] nvarchar(36), \n[Col39] nvarchar(36), \n[Col40] nvarchar(36), \n[Col41] nvarchar(36), \n--[Col42] varchar(36) collate LATIN1_GENERAL_100_CI_AS_SC_UTF8 , \n[Col42] varchar(36) collate Japanese_XJIS_100_CI_AI_SC_UTF8,\n[Col43] nvarchar(36), \n[Col44] nvarchar(36), \n--[Col45] varchar(36) collate LATIN1_GENERAL_100_CI_AS_SC_UTF8 , \n[Col45] varchar(36) collate Japanese_XJIS_100_CI_AI_SC_UTF8,\n[Col46] nvarchar(36)\n) with (\n    location = '提供情報②_事象再現用ファイル.csv',\n    data_source = ds2106160060002152,\n    file_format = csvfile\n);\n\nselect * from tbl_test2106160060002152_1;\n\nSELECT DATABASEPROPERTYEX(DB_NAME(), 'Collation') AS Collation;\n--SQL_Latin1_General_CP1_CI_AS\n\n--Latin1_General_100_CI_AI_SC_UTF8  OK\n--Japanese_XJIS_100_CI_AI_SC_UTF8  OK\n\n--日本語 (日本 XJIS)\t0x0411\t0x0411\tJapanese_CI_AS    OK\n--日本語 (日本)\t0x040411\t0x40411\tLatin1_General_CI_AI  NG\n\n\n\nSELECT Name, Description FROM fn_helpcollations()\nWHERE Name like '%Latin1_General_CI_AI%UTF8%' \n  -- AND Description LIKE '% binary sort';   \n\n exec sp_columns tbl_test2106160060002152_1\n\n\n\nselect 'From Synapse Studio' as operation_type, * from test2106160060002152\nselect 'From Synapse Studio' as operation_type, * from tbl_test2106160060002152;\nselect 'From Synapse Studio' as operation_type, * from tbl_test2106160060002152_1\n",
					"metadata": {
						"language": "sql"
					},
					"currentConnection": {
						"poolName": "Built-in",
						"databaseName": "test111"
					},
					"resultLimit": 5000
				},
				"type": "SqlQuery"
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('workspaceName'), '/Test2107020060000129')]",
			"type": "Microsoft.Synapse/workspaces/sqlscripts",
			"apiVersion": "2019-06-01-preview",
			"properties": {
				"content": {
					"query": "CREATE MASTER KEY ENCRYPTION BY PASSWORD = 'M$tr!2345678';\nGO\n\nCREATE DATABASE SCOPED CREDENTIAL [https://rhantestsa01.blob.core.windows.net/test2107020060000129]\nWITH IDENTITY='Managed Identity'\n\n-- 認証情報を利用し、外部データソースを作成\nCREATE EXTERNAL DATA SOURCE ProductionDataSource WITH (\n    LOCATION = 'https://rhantestsa01.blob.core.windows.net',\n    CREDENTIAL = [https://rhantestsa01.blob.core.windows.net/test2107020060000129]\n);\n\n\nCREATE Database DataLakeAcsessDB02 COLLATE Latin1_General_100_CI_AI_SC_UTF8\n\nSELECT * FROM OPENROWSET\n(\n  BULK 'test2107020060000129/result-00200.csv',\n \n    DATA_SOURCE = 'ProductionDataSource',\n    FORMAT = 'CSV', PARSER_VERSION = '2.0'\n) as [result]\n\nSELECT * FROM OPENROWSET\n(\n  BULK 'test2107020060000129/result-00200.csv',\n \n    DATA_SOURCE = 'ProductionDataSource',\n    FORMAT = 'CSV', PARSER_VERSION = '2.0'\n)  with (\n  Col1\tvarchar(60) collate Japanese_XJIS_100_CI_AI_SC_UTF8 ,\nCol2\tvarchar(60) collate Japanese_XJIS_100_CI_AI_SC_UTF8,\nCol3\tvarchar(60) collate Japanese_XJIS_100_CI_AI_SC_UTF8,\nCol4\tvarchar(60) collate Japanese_XJIS_100_CI_AI_SC_UTF8,\nCol5\tvarchar(60) collate Japanese_XJIS_100_CI_AI_SC_UTF8,\nCol6\tvarchar(60) collate Japanese_XJIS_100_CI_AI_SC_UTF8,\nCol7\tvarchar(60) collate Japanese_XJIS_100_CI_AI_SC_UTF8,\nCol8\tvarchar(60) collate Japanese_XJIS_100_CI_AI_SC_UTF8,\nCol9\tvarchar(60) collate Japanese_XJIS_100_CI_AI_SC_UTF8,\nCol10\tvarchar(60) collate Japanese_XJIS_100_CI_AI_SC_UTF8,\nCol11\tvarchar(60) collate Japanese_XJIS_100_CI_AI_SC_UTF8,\nCol12\tvarchar(60) collate Japanese_XJIS_100_CI_AI_SC_UTF8,\nCol13\tvarchar(60) collate Japanese_XJIS_100_CI_AI_SC_UTF8,\nCol14\tvarchar(60) collate Japanese_XJIS_100_CI_AI_SC_UTF8,\nCol15\tvarchar(60) collate Japanese_XJIS_100_CI_AI_SC_UTF8,\nCol16\tvarchar(60) collate Japanese_XJIS_100_CI_AI_SC_UTF8,\nCol17\tvarchar(60) collate Japanese_XJIS_100_CI_AI_SC_UTF8,\nCol18\tvarchar(60) collate Japanese_XJIS_100_CI_AI_SC_UTF8,\nCol19\tvarchar(60) collate Japanese_XJIS_100_CI_AI_SC_UTF8,\nCol20\tvarchar(60) collate Japanese_XJIS_100_CI_AI_SC_UTF8\n) as r\n\n where (C2 BETWEEN '11:32:00' AND '11:36:00' ) AND C6 = 'Z1DR10C0'\n\nSELECT * FROM OPENROWSET\n(\n  BULK 'test2107020060000129/result-00200.csv',\n \n    DATA_SOURCE = 'ProductionDataSource',\n    FORMAT = 'CSV', PARSER_VERSION = '2.0'\n)  with (\n  Col1\tvarchar(60)  ,\nCol2\tvarchar(60) ,\nCol3\tvarchar(60) ,\nCol4\tvarchar(60) ,\nCol5\tvarchar(60) ,\nCol6\tvarchar(60) ,\nCol7\tvarchar(60) ,\nCol8\tvarchar(60) ,\nCol9\tvarchar(60) ,\nCol10\tvarchar(60) ,\nCol11\tvarchar(60) ,\nCol12\tvarchar(60) ,\nCol13\tvarchar(60) ,\nCol14\tvarchar(60) ,\nCol15\tvarchar(60) ,\nCol16\tvarchar(60) ,\nCol17\tvarchar(60) ,\nCol18\tvarchar(60) ,\nCol19\tvarchar(60) ,\nCol20\tvarchar(60) \n) as r\n\n\nSELECT * FROM OPENROWSET\n(\n  BULK 'test2107020060000129/result-00064.csv',\n \n    DATA_SOURCE = 'ProductionDataSource',\n    FORMAT = 'CSV', PARSER_VERSION = '2.0'\n) AS [result]\n\n\n",
					"metadata": {
						"language": "sql"
					},
					"currentConnection": {
						"poolName": "Built-in",
						"databaseName": "DataLakeAcsessDB02"
					},
					"resultLimit": 5000
				},
				"type": "SqlQuery"
			},
			"dependsOn": []
		}
	]
}